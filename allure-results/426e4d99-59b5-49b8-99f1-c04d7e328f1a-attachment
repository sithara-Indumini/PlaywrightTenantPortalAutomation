# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Verify that user able to login to the tenant portal with valid credentials
- Location: C:\TenantPortalWorkDirectory\tests\Login\TC_001.spec.ts:5:5

# Error details

```
TimeoutError: locator.click: Timeout 10000ms exceeded.
Call log:
  - waiting for getByRole('button', { name: ' Login in', exact: true })

    at C:\TenantPortalWorkDirectory\tests\Login\TC_001.spec.ts:27:76
    at C:\TenantPortalWorkDirectory\tests\Login\TC_001.spec.ts:26:16
```

# Page snapshot

```yaml
- link "Fork me on GitHub":
  - img "Fork me on GitHub"
- heading "Login Page" [level=2]
- heading "This is where you can log into the secure area. Enter tomsmith for the username and SuperSecretPassword! for the password. If the information is wrong you should see error messages." [level=4]:
  - text: This is where you can log into the secure area. Enter
  - emphasis: tomsmith
  - text: for the username and
  - emphasis: SuperSecretPassword!
  - text: for the password. If the information is wrong you should see error messages.
- text: Username
- textbox "Username": tomsmith
- text: Password
- textbox "Password": SuperSecretPassword!
- button " Login"
- separator
- text: Powered by
- link "Elemental Selenium"
```

# Test source

```ts
   1 | //Import the playwright module
   2 | import { test, expect } from '@playwright/test';
   3 |
   4 | //Write a test
   5 | test('Verify that user able to login to the tenant portal with valid credentials', async ({ page }) => {
   6 |
   7 |     // Navigate to the login page
   8 |     await page.goto('http://the-internet.herokuapp.com/login');
   9 |
  10 |     const headingText = await page.locator('xpath=//*[@id="content"]/div/h2').textContent();
  11 |
  12 |     if (headingText?.trim() === 'Login Page') {
  13 |         console.log('✅ Test case is pass');
  14 |     } else {
  15 |         console.log('❌ Test case failed: Text does not match');
  16 |         console.log('Found text:', headingText);
  17 |     }
  18 |
  19 |     // Adding user name and password
  20 |     await test.step('Enter User name and password', async () => {
  21 |         await page.getByRole('textbox', { name: 'username' }).fill('tomsmith');
  22 |         await page.getByRole('textbox', { name: 'password' }).fill('SuperSecretPassword!');
  23 |
  24 |     })
  25 |
  26 |     await test.step('Click on Login', async () => {
> 27 |         await page.getByRole('button', { name: ' Login in', exact: true }).click();
     |                                                                            ^ TimeoutError: locator.click: Timeout 10000ms exceeded.
  28 |       });
  29 |
  30 | })
  31 |
```