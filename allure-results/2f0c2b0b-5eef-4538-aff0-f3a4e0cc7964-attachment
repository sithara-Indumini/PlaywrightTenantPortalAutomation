# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: RegressionTesting >> Test 4
- Location: C:\WorkDirectory\tests\Chapter04\04_TestReports_Test.spec.ts:54:9

# Error details

```
Error: Timed out 10000ms waiting for expect(locator).toHaveTitle(expected)

Locator: locator(':root')
Expected string: "Gmail5"
Received string: "Gmail"
Call log:
  - expect.toHaveTitle with timeout 10000ms
  - waiting for locator(':root')
    3 × locator resolved to <html dir="ltr" lang="en-US">…</html>
      - unexpected value ""
    - locator resolved to <html dir="ltr" lang="en-US" class="eC9N2e">…</html>
    - unexpected value ""
    9 × locator resolved to <html dir="ltr" lang="en-US" class="eC9N2e">…</html>
      - unexpected value "Gmail"

    at C:\WorkDirectory\tests\Chapter04\04_TestReports_Test.spec.ts:63:28
```

# Page snapshot

```yaml
- heading "Sign in" [level=1]
- text: to continue to Gmail
- textbox "Email or phone"
- button "Forgot email?"
- text: Not your computer? Use a Private Window to sign in.
- link "Learn more about using Guest mode"
- button "Next"
- button "Create account"
- contentinfo:
  - combobox "English (United States)"
  - list:
    - listitem:
      - link "Help"
    - listitem:
      - link "Privacy"
    - listitem:
      - link "Terms"
```

# Test source

```ts
   1 | // Import playwright module
   2 | import { test, expect } from '@playwright/test';
   3 |
   4 | /**
   5 |  * Author Testers Talk
   6 |  */
   7 | test.describe('SmokeTesting', () => {
   8 |     // Write a test
   9 |     test('Test 1', async ({ page }) => {
  10 |         // Go to URL
  11 |         //Go to URL
  12 |         await page.goto('https://workspace.google.com/intl/en-US/gmail/');
  13 |
  14 |         //Click on sign in
  15 |         await page.getByRole('link', { name: 'Sign into Gmail' }).click()
  16 |         await page.getByText('Sign in', { exact: true })
  17 |
  18 |         //Validate the web page title
  19 |         await expect(page).toHaveTitle('Gmail');
  20 |     });
  21 | });
  22 |
  23 | /**
  24 |  * Author Testers Talk
  25 |  */
  26 | test.describe('RegressionTesting', () => {
  27 |     // Write a test
  28 |     test('Test 2', async ({ page }) => {
  29 |         //Go to URL
  30 |         await page.goto('https://workspace.google.com/intl/en-US/gmail/');
  31 |
  32 |         //Click on sign in
  33 |         await page.getByRole('link', { name: 'Sign into Gmail' }).click()
  34 |         await page.getByText('Sign in', { exact: true })
  35 |
  36 |         //Validate the web page title
  37 |         await expect(page).toHaveTitle('Gmail');
  38 |     });
  39 |
  40 |     // Write a test
  41 |     test('Test 3', async ({ page }) => {
  42 |         // Go to URL
  43 |         //Go to URL
  44 |         await page.goto('https://workspace.google.com/intl/en-US/gmail/');
  45 |
  46 |         //Click on sign in
  47 |         await page.getByRole('link', { name: 'Sign into Gmail' }).click()
  48 |         await page.getByText('Sign in', { exact: true })
  49 |
  50 |         //Validate the web page title
  51 |         await expect(page).toHaveTitle('Gmail');
  52 |     });
  53 |
  54 |     test('Test 4', async ({ page }) => {
  55 |         //Go to URL
  56 |         await page.goto('https://workspace.google.com/intl/en-US/gmail/');
  57 |
  58 |         //Click on sign in
  59 |         await page.getByRole('link', { name: 'Sign into Gmail' }).click()
  60 |         await page.getByText('Sign in', { exact: true })
  61 |
  62 |         //Validate the web page title
> 63 |         await expect(page).toHaveTitle('Gmail5');
     |                            ^ Error: Timed out 10000ms waiting for expect(locator).toHaveTitle(expected)
  64 |     });
  65 | });
```